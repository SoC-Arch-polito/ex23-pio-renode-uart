; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = ststm32
board = disco_f051r8
framework = zephyr

[env:disco_f051r8_renode]
; Custom upload settings for renode integration
upload_protocol = custom
upload_command = renode $UPLOAD_FLAGS
upload_flags =
    -e include @scripts/single-node/stm32f0disco.resc
    -e sysbus LoadELF @$PROG_PATH

    -e emulation CreateServerSocketTerminal 3456 \"term\"
    -e connector Connect usart2 term
    -e showAnalyzer usart2

    -e start


[env:disco_f051r8_renode_debug]
; Custom debug settings for renode integration
build_type = debug
debug_tool = custom
debug_load_mode = manual ; Disable automatic loading by platformio
debug_port = localhost:3333

debug_server = renode
    --hide-log ; to avoid filling the debug console with renode logs​
    -e include @scripts/single-node/stm32f0disco.resc
    -e sysbus LoadELF @$PROG_PATH
    -e machine StartGdbServer 3333

     ; The usual commands so that we can interact with the usart2
    -e emulation CreateServerSocketTerminal 3456 "term" ; Note there is no backslash​
    -e connector Connect usart2 term
    -e showAnalyzer usart2

debug_extra_cmds =
    monitor start ; same as we did when using gdb manually, we start the simulation


[env:disco_f051r8_board]
debug_tool = stlink
upload_protocol = stlink
monitor_speed = 115200
